buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'hu.supercluster.paperwork'
//apply plugin: 'com.frogermcs.androiddevmetrics'
//apply plugin: 'blockcanaryex'
//apply plugin: 'com.jakewharton.hugo'

def SHA
paperwork {
    SHA = gitSha()
    set = [
            gitSha   : SHA,
            buildDate: buildTime("yyyy-MM-dd HH:00:00 z", "UTC"),
    ]
}

android {
    signingConfigs {
        config {
            def keystorePropertiesFile = rootProject.file("local.properties")
            def keystoreProperties = new Properties()
            keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    compileSdkVersion 26
    buildToolsVersion "26.0.3"
    defaultConfig {
        applicationId "com.mreza.nasirloo.slick.movies"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "0.4 beta ${SHA}"
        testInstrumentationRunner "com.github.pedramrn.slick.parent.utils.di.TestRunnerDagger"
        vectorDrawables.useSupportLibrary = true
        dataBinding.enabled = true
        multiDexEnabled true
        resConfigs "auto"

        archivesBaseName = "slick-movies-${versionCode}-${versionName}-${SHA}".replace(" ${SHA}", "")

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ['autovaluegson.defaultCollectionsToEmpty': 'true']
            }
        }
        signingConfig signingConfigs.config
    }
    buildTypes {
        release {
            debuggable true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            // Disable fabric build ID generation for debug builds
            ext.enableCrashlytics = false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        // Unit tests live in src/unitTest.
        test.java.srcDir 'src/unitTests/java'
        test.resources.srcDir 'src/unitTests/resources'

        // Integration tests live in src/integrationTest.
//        test.java.srcDir 'src/integrationTests/java'

        // Unit tests for debug build type specific code live in src/debugUnitTest.
        testDebug.java.srcDir 'src/debugUnitTests/java'
        testDebug.resources.srcDirs 'src/debugUnitTests/resources'

        // Unit tests for release build type specific code live in src/releaseUnitTest.
        testRelease.java.srcDir 'src/releaseUnitTests/java'
        testRelease.resources.srcDir 'src/releaseUnitTests/resources'

        // Functional tests live in src/functionalTests.
        androidTest.java.srcDir 'src/androidTest/java'
    }
    productFlavors {
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')


    testImplementation 'junit:junit:4.12'
    testImplementation 'com.google.truth:truth:0.35'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation('com.android.support.test:runner:0.5', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation('com.android.support.test.espresso:espresso-contrib:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    })
    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'

    testImplementation 'org.mockito:mockito-core:2.7.22'
    androidTestImplementation 'org.mockito:mockito-android:2.7.22'
//    androidTestImplementation 'com.novoda:espresso-support-extras:0.0.3'
//    debugImplementation 'com.novoda:espresso-support-extras:0.0.3'

    testImplementation 'com.github.fabioCollini:DaggerMock:0.6.4'
    //and/or
    androidTestImplementation 'com.github.fabioCollini:DaggerMock:0.6.4'

    //android core
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:cardview-v7:26.1.0'

    implementation 'com.google.firebase:firebase-core:11.4.2'
    implementation 'com.google.firebase:firebase-auth:11.4.2'
    implementation 'com.google.firebase:firebase-database:11.4.2'
    implementation 'com.google.android.gms:play-services-auth:11.4.2'

    //slick
    implementation 'com.github.slick:slick:0.13'
    implementation 'com.github.slick:slick-middleware:0.13'
    implementation 'com.github.slick:slick-conductor:0.13'
    annotationProcessor 'com.github.slick:slick-compiler:0.13'

    //conductor
    implementation 'com.bluelinelabs:conductor:2.1.5-SNAPSHOT'
    implementation 'com.bluelinelabs:conductor-support:2.1.5-SNAPSHOT'

    //image loading
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'jp.wasabeef:picasso-transformations:2.1.2'
//    implementation 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.4.1'

    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:retrofit-mock:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
//    implementation 'com.squareup.retrofit2:converter-moshi:2.3.0'
//    implementation 'com.squareup.retrofit2:adapter-rxjava:2.3.0'
//    implementation 'com.squareup.retrofit2:adapter-java8:2.3.0'

    //okhttp
    implementation 'com.squareup.okhttp3:okhttp:3.8.0'
    implementation 'com.squareup.okhttp3:mockwebserver:3.8.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    androidTestImplementation('com.jakewharton.espresso:okhttp3-idling-resource:1.0.0') {
        transitive = false
    }

    //json
    implementation 'com.google.code.gson:gson:2.8.0'
//    implementation 'com.squareup.moshi:moshi:1.4.0'

    //rxjava
    implementation 'io.reactivex.rxjava2:rxjava:2.1.6'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'com.jakewharton.rxrelay2:rxrelay:2.0.0'

    //rxjava
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.0.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-recyclerview-v7:2.0.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-design:2.0.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-appcompat-v7:2.0.0'

    //database requery
    implementation 'io.requery:requery:1.3.2'
    implementation 'io.requery:requery-android:1.3.2'
    annotationProcessor 'io.requery:requery-processor:1.3.2'

    implementation 'com.google.dagger:dagger:2.10'
    implementation 'com.google.dagger:dagger-android:2.10'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.10'

    provided 'com.google.auto.value:auto-value:1.3'
    annotationProcessor 'com.google.auto.value:auto-value:1.3'
    annotationProcessor 'com.github.reggar:auto-value-ignore-hash-equals:1.1.3'
    annotationProcessor 'com.ryanharter.auto.value:auto-value-parcel:0.2.5'
    provided 'com.ryanharter.auto.value:auto-value-parcel:0.2.5'

    annotationProcessor 'com.ryanharter.auto.value:auto-value-gson:0.4.6'
    provided 'com.ryanharter.auto.value:auto-value-gson:0.4.6'

/*
    implementation 'com.evernote:android-state:1.1.5'
    annotationProcessor 'com.evernote:android-state-processor:1.1.5'
*/
    //epoxy
    /*implementation ('com.airbnb.android:epoxy:2.0.0') {
        transitive = false;
    }
    annotationProcessor ('com.airbnb.android:epoxy-processor:2.0.0') {
        transitive = false;
    }*/

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'

    /*debugImplementation 'com.letv.sarrsdesktop:BlockCanaryExJRT:0.9.9.1'
    releaseImplementation 'com.letv.sarrsdesktop:BlockCanaryExJRTNoOp:0.9.9.1'
    testImplementation 'com.letv.sarrsdesktop:BlockCanaryExJRTNoOp:0.9.9.1'*/

    /*debugImplementation 'com.github.markzhai:blockcanary-android:1.5.0'
    releaseImplementation 'com.github.markzhai:blockcanary-no-op:1.5.0'
    testImplementation 'com.github.markzhai:blockcanary-no-op:1.5.0'*/

    //views
    implementation 'it.sephiroth.android.library.bottomnavigation:bottom-navigation:2.0.1-rc1'
    implementation 'com.aurelhubert:ahbottomnavigation:2.0.6'
    implementation 'com.github.varunest:sparkbutton:1.0.5'
    implementation 'com.gjiazhe:scrollparallaximageview:1.0'
//    implementation 'com.fmsirvent:parallaxeverywhere:1.0.4'
    implementation 'com.xwray:groupie:1.1.1'

    implementation 'com.lapism:searchview:4.0'
//    implementation 'com.github.arimorty:floatingsearchview:2.1.1'
    implementation 'com.github.rubensousa:gravitysnaphelper:1.3'

    implementation "android.arch.lifecycle:common-java8:1.0.0"

    compile 'com.tspoon.traceur:traceur:1.0.1'

    configurations.all {
        resolutionStrategy.force 'com.google.guava:guava:23.0'
    }
    compile('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true;
    }
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xmaxerrs" << "500"
    }
}

apply plugin: 'com.google.gms.google-services'